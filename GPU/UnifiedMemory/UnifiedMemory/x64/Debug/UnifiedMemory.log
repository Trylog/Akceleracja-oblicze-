  Compiling CUDA source file kernel.cu...
  
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory>"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6\bin\nvcc.exe" -gencode=arch=compute_52,code=\"sm_52,compute_52\" --use-local-env -ccbin "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\bin\HostX64\x64" -x cu   -I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6\include" -I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6\include"  -G   --keep-dir x64\Debug  -maxrregcount=0   --machine 64 --compile -cudart static  -g  -DWIN32 -DWIN64 -D_DEBUG -D_CONSOLE -D_MBCS -Xcompiler "/EHsc /W3 /nologo /Od /FS /Zi /RTC1 /MDd " -Xcompiler "/Fdx64\Debug\vc143.pdb" -o "C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\x64\Debug\kernel.cu.obj" "C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu" 
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(71): warning #177-D: variable "scale" was declared but never referenced
    	T scale = max - min;
    	  ^
            detected during:
              instantiation of "void randomizeMatrices(int, int, int, T *, T *) [with T=int8_t]" at line 154
              instantiation of "void distinguish<T,U>(int, int, int, T *, T *) [with T=int8_t, U=int32_t]" at line 246
              instantiation of "void program<T>() [with T=int8_t]" at line 263
  
  Remark: The warnings can be suppressed with "-diag-suppress <warning-number>"
  
  kernel.cu
  tmpxft_000052dc_00000000-7_kernel.cudafe1.cpp
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(245): warning C4984: 'if constexpr' is a C++17 language extension
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(245): note: the template instantiation context (the oldest one first) is
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(262): note: see reference to function template instantiation 'void program<float>(void)' being compiled
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(187): warning C4984: 'if constexpr' is a C++17 language extension
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(187): note: the template instantiation context (the oldest one first) is
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(262): note: see reference to function template instantiation 'void program<float>(void)' being compiled
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(249): note: see reference to function template instantiation 'void distinguish<T,T>(int,int,int,T *,T *)' being compiled
          with
          [
              T=float
          ]
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(190): warning C4984: 'if constexpr' is a C++17 language extension
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(56): warning C4984: 'if constexpr' is a C++17 language extension
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(56): note: the template instantiation context (the oldest one first) is
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(249): note: see reference to function template instantiation 'void distinguish<T,T>(int,int,int,T *,T *)' being compiled
          with
          [
              T=float
          ]
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(154): note: see reference to function template instantiation 'void randomizeMatrices<T>(int,int,int,T *,T *)' being compiled
          with
          [
              T=float
          ]
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(77): warning C4984: 'if constexpr' is a C++17 language extension
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(120): warning C4244: '=': conversion from 'int' to 'T', possible loss of data
          with
          [
              T=float
          ]
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(120): note: the template instantiation context (the oldest one first) is
  C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(157): note: see reference to function template instantiation 'void fixedMatrices<T>(int,int,int,T *,T *)' being compiled
          with
          [
              T=float
          ]
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(127): warning C4244: '=': conversion from 'int' to 'T', possible loss of data
          with
          [
              T=float
          ]
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(60): warning C4984: 'if constexpr' is a C++17 language extension
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(65): warning C4244: 'argument': conversion from 'time_t' to 'unsigned int', possible loss of data
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\UnifiedMemory\kernel.cu(86): warning C4984: 'if constexpr' is a C++17 language extension
     Creating library C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\x64\Debug\UnifiedMemory.lib and object C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\x64\Debug\UnifiedMemory.exp
LINK : warning LNK4098: defaultlib 'LIBCMT' conflicts with use of other libs; use /NODEFAULTLIB:library
kernel.cu.obj : error LNK2019: unresolved external symbol cublasCreate_v2 referenced in function "void __cdecl distinguish<signed char,int>(int,int,int,signed char *,signed char *)" (??$distinguish@CH@@YAXHHHPEAC0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol cublasDestroy_v2 referenced in function "void __cdecl distinguish<signed char,int>(int,int,int,signed char *,signed char *)" (??$distinguish@CH@@YAXHHHPEAC0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol cublasGetMatrix referenced in function "void __cdecl distinguish<signed char,int>(int,int,int,signed char *,signed char *)" (??$distinguish@CH@@YAXHHHPEAC0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol cublasSscal_v2 referenced in function "void __cdecl randomizeMatrices<float>(int,int,int,float *,float *)" (??$randomizeMatrices@M@@YAXHHHPEAM0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol cublasDscal_v2 referenced in function "void __cdecl randomizeMatrices<double>(int,int,int,double *,double *)" (??$randomizeMatrices@N@@YAXHHHPEAN0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol cublasSaxpy_v2 referenced in function "void __cdecl randomizeMatrices<float>(int,int,int,float *,float *)" (??$randomizeMatrices@M@@YAXHHHPEAM0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol cublasDaxpy_v2 referenced in function "void __cdecl randomizeMatrices<double>(int,int,int,double *,double *)" (??$randomizeMatrices@N@@YAXHHHPEAN0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol cublasSgemm_v2 referenced in function "void __cdecl distinguish<float,float>(int,int,int,float *,float *)" (??$distinguish@MM@@YAXHHHPEAM0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol cublasDgemm_v2 referenced in function "void __cdecl distinguish<double,double>(int,int,int,double *,double *)" (??$distinguish@NN@@YAXHHHPEAN0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol cublasGemmEx referenced in function "void __cdecl distinguish<signed char,int>(int,int,int,signed char *,signed char *)" (??$distinguish@CH@@YAXHHHPEAC0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol curandCreateGenerator referenced in function "void __cdecl randomizeMatrices<signed char>(int,int,int,signed char *,signed char *)" (??$randomizeMatrices@C@@YAXHHHPEAC0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol curandDestroyGenerator referenced in function "void __cdecl randomizeMatrices<signed char>(int,int,int,signed char *,signed char *)" (??$randomizeMatrices@C@@YAXHHHPEAC0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol curandSetPseudoRandomGeneratorSeed referenced in function "void __cdecl randomizeMatrices<signed char>(int,int,int,signed char *,signed char *)" (??$randomizeMatrices@C@@YAXHHHPEAC0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol curandGenerateUniform referenced in function "void __cdecl randomizeMatrices<float>(int,int,int,float *,float *)" (??$randomizeMatrices@M@@YAXHHHPEAM0@Z)
kernel.cu.obj : error LNK2019: unresolved external symbol curandGenerateUniformDouble referenced in function "void __cdecl randomizeMatrices<double>(int,int,int,double *,double *)" (??$randomizeMatrices@N@@YAXHHHPEAN0@Z)
C:\Users\Adam Czekalski\Documents\GitHub\Akceleracja-obliczen-CUDA\GPU\UnifiedMemory\x64\Debug\UnifiedMemory.exe : fatal error LNK1120: 15 unresolved externals
